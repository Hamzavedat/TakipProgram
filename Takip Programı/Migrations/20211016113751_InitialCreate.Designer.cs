// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Takip_Programı.Models;

namespace Takip_Programı.Migrations
{
    [DbContext(typeof(TakipProgramiContext))]
    [Migration("20211016113751_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("Takip_Programı.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adress")
                        .HasColumnType("TEXT");

                    b.Property<int>("Change")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Position")
                        .HasColumnType("TEXT");

                    b.Property<int>("Risk")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.Property<string>("VergiDairesi")
                        .HasColumnType("TEXT");

                    b.Property<string>("VergiNo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Takip_Programı.Models.ProductDefine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<double>("BuyAmount")
                        .HasColumnType("REAL");

                    b.Property<double>("BuyPrice")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("SellAmount")
                        .HasColumnType("REAL");

                    b.Property<double>("SellPrice")
                        .HasColumnType("REAL");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductDefine");
                });

            modelBuilder.Entity("Takip_Programı.Models.PumpDefine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InitialCounter")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PumpName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("WareHouseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WareHouseId");

                    b.ToTable("PumpDefine");
                });

            modelBuilder.Entity("Takip_Programı.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Takip_Programı.Models.WareHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductDefineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WareHouseName")
                        .HasColumnType("TEXT");

                    b.Property<int>("WareHouseStock")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WareHouseVolume")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductDefineId");

                    b.ToTable("WareHouseDefine");
                });

            modelBuilder.Entity("Takip_Programı.Models.PumpDefine", b =>
                {
                    b.HasOne("Takip_Programı.Models.WareHouse", "WareHouse")
                        .WithMany()
                        .HasForeignKey("WareHouseId");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("Takip_Programı.Models.WareHouse", b =>
                {
                    b.HasOne("Takip_Programı.Models.ProductDefine", "ProductDefine")
                        .WithMany()
                        .HasForeignKey("ProductDefineId");

                    b.Navigation("ProductDefine");
                });
#pragma warning restore 612, 618
        }
    }
}
